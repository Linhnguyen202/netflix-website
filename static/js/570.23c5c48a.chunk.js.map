{"version":3,"file":"static/js/570.23c5c48a.chunk.js","mappings":"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","sources":["pages/MovieDetail.jsx"],"sourcesContent":["import { func } from 'prop-types';\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport {SwiperSlide,Swiper} from \"swiper/react\"\nimport useSWR from 'swr';\nimport MovieCart from '../components/movie/MovieCart';\nimport { fetcher, tmdbAPI } from '../config';\n// https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>\nconst MovieDetail = ({kind = \"movie\"}) => {\n    const { movieId } = useParams()\n    console.log(movieId)\n    const {data,error} = useSWR(tmdbAPI.getMovieDetail(kind,movieId),fetcher)\n    if(!data) return null\n    const {backdrop_path,poster_path,title ,genres, overview} = data\n    \n    return (\n        \n        <>\n        {data && <div className='py-10'>\n            <div className='w-full h-[600px] relative'>\n            <div className=\"absolute inset-0 bg-black bg-opacity-60\"></div>\n            <div className=\"w-full h-full bg-no-repeat bg-cover\" style={{\n                backgroundImage:`url(${tmdbAPI.imageOriginal(backdrop_path)})`\n            }}></div>\n            </div>\n            <div className=\"w-full h-[600px] max-w-[500px] mx-auto -mt-[200px] z-10 relative pb-10\">\n                <img src={tmdbAPI.imageOriginal(poster_path)} className='w-full h-full object-fit rounded-xl' alt=\"\" />\n            </div>\n            <h1 className='mb-10 text-3xl font-bold text-center text-white'>{title}</h1>    \n            {genres.length > 0 &&  <div className=\"flex items-center justify-center mb-10 gap-x-5\">\n                {genres.map(item=>(\n                    <span className='px-4 py-2 border rounded border-primary text-primary' key={item.id}>{item.name}</span>\n                ))}\n            </div>}\n            <p className=\"text-sm text-center leading-relaxed max-w-[600px] mx-auto mb-10\">{overview}</p>\n            <MovieMeta kind={kind} type=\"credits\"></MovieMeta>\n            <MovieMeta kind={kind} type=\"videos\"></MovieMeta>\n            <MovieMeta kind={kind} type=\"similar\"></MovieMeta>\n        </div>}\n            \n        </>\n    );\n};\nfunction MovieMeta({kind,type = \"videos\"}){\n    const { movieId } = useParams()\n    console.log(movieId)\n    const {data,error} = useSWR(tmdbAPI.getMovieCast(kind,movieId,type),fetcher)\n    if(!data) return null; \n    if(type === \"credits\"){\n        const { cast } = data\n        return (\n            <div className='py-10'>\n                <h2 className='mb-10 text-3xl text-center'>Casts</h2>\n                <div className=\" cast-list\">\n                <Swiper grabCursor={\"true\"} spaceBetween={40} slidesPerView={\"auto\"}>\n                    {cast.slice(0,10).map(item=>{\n                        return (\n                            <SwiperSlide key={item.id}>\n                                <div  className=\"cast-item\">\n                                    <img src={`https://image.tmdb.org/t/p/original${item.profile_path}`}  className='w-full h-[350px] object-cover rounded-lg mb-3 select-none' alt=\"\" />\n                                    <h3 className='text-xl'>{item.name}</h3>\n                                </div>                    \n                            </SwiperSlide>\n                        )\n                    })}\n                </Swiper>\n                \n                    \n                </div>\n            </div>\n        )\n    }\n    else{\n        const { results } = data;\n        if(type === \"videos\"){\n            return (\n                <div className='py-10'>\n                    <div className=\"flex flex-col gap-5\">\n                        {results.slice(0,2).map(item=>{\n                            return(\n                                <div key={item.id}>\n                                    <h3 className='inline-block p-3 mb-5 text-xl font-medium text-white bg-secondary'>{item.name}</h3>\n                                    <div  className='w-full aspect-video'>\n                                        <iframe width=\"956\" height=\"538\" src={`https://www.youtube.com/embed/${item.key}`}\n                                        title=\"YouTube video player\" \n                                        frameborder=\"0\" \n                                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" \n                                        allowfullscreen\n                                        className='object-fill w-full h-full'></iframe>\n                                    </div>\n                                </div>\n                                \n                            )\n                        })}  \n                    </div>\n               \n                </div>\n            )\n        }\n        if(type === \"similar\"){\n            return(\n            <div className='py-10'>\n                <h2 className='mb-10 text-3xl font-medium'>Similar movies</h2>\n                <div className=\"movie-list\">\n                <Swiper grabCursor={\"true\"} spaceBetween={40} slidesPerView={\"auto\"}>\n                {results && results.length > 0 && results.map((item)=>{\n                    return (\n                    <SwiperSlide key={item.id}>\n                            <MovieCart item={item}></MovieCart> \n                            </SwiperSlide>\n                            )\n                        })}  \n                </Swiper>\n                </div>\n            </div>\n            )\n        }\n        else{\n            return null;\n        }\n    }\n   \n       \n    \n}\nexport default MovieDetail;"],"names":["MovieMeta","kind","type","movieId","useParams","console","log","useSWR","tmdbAPI","fetcher","data","error","cast","className","grabCursor","spaceBetween","slidesPerView","slice","map","item","src","profile_path","alt","name","id","results","width","height","key","title","frameborder","allow","allowfullscreen","length","backdrop_path","poster_path","genres","overview","style","backgroundImage"],"sourceRoot":""}